# Example Nginx reverse proxy for Next.js on port 3000
# Place this under /etc/nginx/conf.d/your-site.conf

user  nginx;
worker_processes  auto;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile        on;
  tcp_nopush      on;
  tcp_nodelay     on;
  keepalive_timeout  65;
  types_hash_max_size 4096;

  # Gzip
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_vary on;
  gzip_types
    text/plain
    text/css
    text/javascript
    application/javascript
    application/json
    application/xml
    application/rss+xml
    font/ttf
    font/otf
    image/svg+xml;

  # Upstream to Next.js container or local process
  upstream next_app {
    # If using Docker on same host network:
    # server 127.0.0.1:3000;

    # If using docker-compose service name:
    # server web:3000;

    server 127.0.0.1:3000;
  }

  server {
    listen 80;
    server_name _;

    # Real IP headers (if behind another proxy/load balancer)
    set_real_ip_from  10.0.0.0/8;
    set_real_ip_from  172.16.0.0/12;
    set_real_ip_from  192.168.0.0/16;
    real_ip_header    X-Forwarded-For;

    # Proxy headers + WebSocket support
    location / {
      proxy_pass         http://next_app;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_set_header   Upgrade $http_upgrade;
      proxy_set_header   Connection $connection_upgrade;

      # Timeouts
      proxy_connect_timeout   60s;
      proxy_send_timeout      60s;
      proxy_read_timeout      60s;
    }

    # Optional: serve static files directly if mounted to /var/www/static
    # location /static/ {
    #   alias /var/www/static/;
    #   access_log off;
    #   expires 30d;
    # }

    # Health check endpoint (proxied to Next.js)
    location = /healthz {
      proxy_pass http://next_app/;
      access_log off;
    }
  }

  # Map for websocket connection header
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }
}